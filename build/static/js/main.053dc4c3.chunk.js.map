{"version":3,"sources":["Navbar.js","BlogList.js","useFetch.js","Home.js","Create.js","BlogDetails.js","NotFound.js","App.js","index.js"],"names":["Navbar","className","to","BlogList","props","blogs","title","map","blog","author","body","id","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortcont","AbortController","fetch","signal","then","response","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","setAuthor","setBody","succesmsg","setSuccessMsg","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","setTimeout","push","type","required","value","onChange","target","disabled","BlogDetails","useParams","onClick","NotFound","App","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.053dc4c3.chunk.js","sourcesContent":["import {Link} from 'react-router-dom';\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <h1>The Blog</h1>\r\n            <div className=\"links\">\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\">New Blog</Link>\r\n                <Link to='/contact'>Contact</Link>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = (props) => {\r\n    const blogs = props.blogs;\r\n    const title = props.title;\r\n    // const handleDelete = props.handleDelete;\r\n    // console.log(props , blogs)\r\n\r\n    return (  \r\n        <div className=\"blog-list\">\r\n            <h2>{title}</h2>\r\n            {blogs.map((blog) => (\r\n            <div className=\"blog-preview\" key={blog.id}>\r\n                    <h2>{blog.title}</h2>\r\n                    <p>Written by {blog.author}</p>\r\n                    <p>{blog.body}</p>\r\n                    <Link to={`/blogs/${blog.id}`} className=\"read-more\">Read more</Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BlogList;","import {useState , useEffect} from 'react';\r\n\r\n// We can make custom hooks but it should start with *useAnyName*\r\nconst useFetch = (url)=>{\r\n\r\n    const [data , setData] = useState(null);\r\n    const [isPending , setIsPending] = useState(true);\r\n    const [error , setError] = useState(null);\r\n\r\n    useEffect( () => {\r\n        const abortcont = new AbortController(); \r\n        fetch(url , {signal : abortcont.signal})//second property to abort\r\n            .then((response) => {\r\n                if(!response.ok){\r\n                    throw Error('Could not fetch the data due to having stomach problem in server.\\n Thanks for co operating Try again later');\r\n                }\r\n                // console.log(response)\r\n                return response.json();\r\n            })\r\n            .then((data)=>{\r\n                // console.log(data);\r\n                setIsPending(false);\r\n                setError(null);\r\n                setData(data);\r\n            })\r\n            .catch((err)=>{\r\n                if(err.name === 'AbortError'){\r\n                    console.log('Aborted')\r\n                }else{\r\n                    setError(err.message);\r\n                    setIsPending(false);\r\n                }\r\n            });\r\n        \r\n        return () =>{\r\n            abortcont.abort();\r\n        }    \r\n    }, [url]);//Whenever there is changes in url it will run this useFetch ,\r\n\r\n    return {data , isPending , error}\r\n}\r\n\r\nexport default useFetch;","import BlogList from './BlogList';\r\nimport useFetch from './useFetch';\r\n\r\nconst Home = () => {\r\n\r\n    const{ data:blogs ,isPending ,error} = useFetch('http://localhost:8000/blogs');\r\n\r\n    return ( \r\n        <div className=\"home\">\r\n            {isPending && <div>Loading .............</div>}\r\n            {error && <div>{ error}</div>}\r\n            {blogs && <BlogList blogs={blogs}  title=\"All Blogs!\" />}\r\n            {/* <BlogList blogs={blogs}/> */}\r\n            {/* <BlogList blogs={blogs.filter( (blog) =>blog.author === 'pankaj m' )} title=\"pankaj m blog\" /> */}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst Create = () => {\r\n    const [title , setTitle] = useState('');\r\n    const [author , setAuthor] = useState('pankaj');\r\n    const [body , setBody] = useState('');\r\n    const [succesmsg , setSuccessMsg] = useState(false)\r\n    const [isPending , setIsPending] = useState(false)\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    const handleSubmit = ((e)=>{\r\n        e.preventDefault();\r\n        const blog = {title , author , body}\r\n        // console.log(blog)\r\n        fetch('http://localhost:8000/blogs' ,{\r\n            method: \"POST\",\r\n            headers: {\"Content-type\" : \"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        }).then(()=>{\r\n            console.log('new added');\r\n            setSuccessMsg(true);\r\n            setIsPending(true);\r\n            setTimeout(()=>{ \r\n                // alert(\"Hello\"); \r\n                setSuccessMsg(false);\r\n                history.push('/')\r\n            }, 3000);\r\n\r\n        })\r\n    })\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"new-blog\">\r\n            {succesmsg && <div className=\"successMsg\">{`New Blog Added`} <br></br>Redirecting to home in seconds </div>}\r\n            <form onSubmit={handleSubmit}>    \r\n                <h2>Add a new Blog</h2>\r\n\r\n                <label>Blog title :</label>\r\n                <input \r\n                    type=\"text\"\r\n                    required\r\n                    value={title}\r\n                    onChange={(e)=>{\r\n                        setTitle(e.target.value);\r\n                    }}\r\n                />\r\n                <label>Blog Author :</label>\r\n                <select\r\n                    value={author}\r\n                    onChange={(e)=>{\r\n                        setAuthor(e.target.value);\r\n                    }}\r\n                >\r\n                    <option value=\"pankaj\">Pankaj</option>\r\n                    <option value=\"mahor\">Mahor</option>\r\n                </select>\r\n                <label>Blog Body:</label>\r\n                <textarea \r\n                    required\r\n                    value={body}\r\n                    onChange={(e)=>{\r\n                        setBody(e.target.value);\r\n                    }}\r\n                ></textarea>\r\n\r\n                {!isPending && <button className=\"submit-btn\">Add blog</button>}\r\n                {isPending && <button className=\"submit-btn\" disabled>Adding...</button>}\r\n\r\n            </form>\r\n            {/* <div className=\"just-preview\">\r\n                <p>{title}</p>\r\n                <p>{body}</p>\r\n                <p>{author}</p>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./useFetch\";\r\nimport { Link } from 'react-router-dom';    \r\n\r\nconst BlogDetails = () => {\r\n    const { id} = useParams();\r\n    const { data:blog , error , isPending} = useFetch('http://localhost:8000/blogs/' + id);\r\n    const history = useHistory();\r\n\r\n    const handleDeleteBlog = () => {\r\n        fetch('http://localhost:8000/blogs/' + id, {\r\n            method: \"DELETE\"\r\n        }).then(()=>{\r\n            console.log('deleted');\r\n            history.push('/');\r\n        })\r\n    }\r\n    \r\n    return (  \r\n        <div className=\"blog-details\">\r\n            { isPending && <div>Loading.....</div>}\r\n            { error && <div>{ error }</div>}\r\n            { blog && (\r\n                <article>\r\n                    <h2>{blog.title}</h2>\r\n                    <p>{`written By ${blog.author}`}</p>\r\n                    <div>{blog.body}</div>\r\n                    <Link className=\"read-more\" to=\"/\">Go Home</Link>\r\n                    <button className=\"deleted\" onClick={handleDeleteBlog}>Delete</button>\r\n                </article>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default BlogDetails;","import {Link} from 'react-router-dom';\r\n\r\n\r\nconst NotFound = () => {\r\n    return ( \r\n        <div className=\"error-page\">\r\n            <h2>Hey Dude!</h2>\r\n            <p>Looks Like You Landed on a wrong planet.</p>\r\n            <Link to=\"/\" className=\"read-more\">Lets Go Home</Link>\r\n        </div>\r\n\r\n    );\r\n}\r\n \r\nexport default NotFound;","import Navbar from './Navbar';\nimport Home from './Home';\nimport {BrowserRouter as Router , Route ,Switch} from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n          <Navbar /> \n          <div className=\"content\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route path=\"/create\">\n                <Create />\n              </Route>\n              <Route path=\"/blogs/:id\">\n                <BlogDetails />\n              </Route>\n              <Route path=\"*\">\n                <NotFound />\n              </Route>\n\n            </Switch>\n          </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}